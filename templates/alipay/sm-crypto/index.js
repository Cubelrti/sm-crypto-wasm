"use strict";let n=null;function h(){const t="sm-crypto/workers/sm-crypto.js";return console.log("init smcrypto worker"),new Promise((s,e)=>{var i;try{n=my.createWorker(t,{useExperimentalWorker:!0}),n.onMessage(({id:r,event:m,message:o})=>{r===-1&&m==="ready"&&(console.log("[sm-crypto] worker ready"),s()),r===-1&&m==="log"&&console.log(o)}),(i=n.onProcessKilled)==null||i.call(n,r=>{console.warn("[sm-crypto] worker process killed",r)})}catch(r){console.warn(r),n.terminate(),e(r)}})}let _=0;function c(t){return(...s)=>new Promise((e,i)=>{const r=_++,m=Date.now();let o={};const u=s.length;o.len=s.length,o.method=t,o.id=r;for(let a=0;a<u;a++){let l=s[a];l instanceof Uint8Array?o[a]=Array.from(l):o[a]=l}console.log(`[sm-crypto] call method: ${t}, id: ${r}`);let p=setTimeout(()=>{i(new Error(`timeout for id: ${r}`))},1e3);n.onMessage(a=>{let{id:l,event:d,message:g,result:y,type:k}=a;if(l===-1&&d==="log"&&console.log(g),l===r){clearTimeout(p);const f=Date.now();console.log(`[sm-crypto] perf: ${t} took ${f-m}ms, id: ${r}`),Array.isArray(y)&&(y=new Uint8Array(y)),e(y)}}),n.postMessage(o)})}const w={initSMCrypto:h,sm2:{generateKeyPairHex:c("sm2_generate_keypair"),compressPublicKeyHex:c("compress_public_key_hex"),encrypt(t,s,e){return e=Object.assign({cipherMode:1,asn1:!1,output:"array"},e),e.output==="string"?c("sm2_encrypt_hex")(s,t,{asn1:e.asn1,c1c2c3:e.cipherMode===0}):c("sm2_encrypt")(s,t,{asn1:e.asn1,c1c2c3:e.cipherMode===0})},decrypt(t,s,e){return e=Object.assign({cipherMode:1,asn1:!1,output:"array"},e),e.output==="string"?c("sm2_decrypt_hex")(s,t,{asn1:e.asn1,c1c2c3:e.cipherMode===0}):c("sm2_decrypt")(s,t,{asn1:e.asn1,c1c2c3:e.cipherMode===0})},initRNGPool:c("init_rng_pool")},sm3:c("sm3"),hmac:c("sm3_hmac"),sm4:c("sm4_encrypt")};module.exports=w;
